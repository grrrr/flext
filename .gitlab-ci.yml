variables:
  GIT_SUBMODULE_STRATEGY: recursive

.build:
  stage: build
  tags:
    - docker
    - default
  image: $CI_REGISTRY/docker/pd_max
  variables:
    PDINCLUDEDIR: "/usr/include/pd"

.buildwin:
  extends: .build
  variables:
    PDDIR: "/Pd"
    PDINCLUDEDIR: "$PDDIR/src"
    PDWIN: "https://msp.ucsd.edu/Software/pd-0.55-2.msw.zip"
  before_script:
    - curl -k -O "$PDWIN"
    - fn="${PDWIN##*/}"; unzip "$fn"; mv "${fn%%.msw*}" $PDDIR
    - ls $PDDIR/


build_linux_float32:
  extends: .build
  script:
    - ./bootstrap.sh
    - ./configure --with-sdkdir=$HOME/pure-data/src --enable-cmem
    - make
  artifacts:
    paths:
      - tutorial/*/*.pd_linux
    expire_in: 1h

build_linux_float64:
  # only test-compile 64-bit build for now, don't test 
  extends: .build
  script:
    - ./bootstrap.sh
    - ./configure --enable-system=pd64 --with-sdkdir=$HOME/pure-data/src --enable-cmem
    - make
  artifacts:
    paths:
      - tutorial/*/*.linux-*-64.so
    expire_in: 1h

test_linux:
  stage: test
  script:
    - $CI_PROJECT_DIR/tutorial/pd/test.sh $CI_PROJECT_DIR

push_github:
  stage: deploy
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  image: $CI_REGISTRY/docker/push_github
  tags:
    - docker
    - default
  script:
    - echo "Pushing to github"
